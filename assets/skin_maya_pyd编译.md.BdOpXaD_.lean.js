import{_ as a,c as d,a3 as e,o as i}from"./chunks/framework.DtMx7FFi.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"skin/maya/pyd编译.md","filePath":"skin/maya/pyd编译.md","lastUpdated":1734448984000}'),s={name:"skin/maya/pyd编译.md"};function p(o,t,r,n,l,h){return i(),d("div",null,t[0]||(t[0]=[e(`<h3 id="不同maya版本的编译环境差异" tabindex="-1">不同MAya版本的编译环境差异 <a class="header-anchor" href="#不同maya版本的编译环境差异" aria-label="Permalink to &quot;不同MAya版本的编译环境差异&quot;">​</a></h3><ul><li>2018.6 - 2022(py2)</li></ul><blockquote><p>2.7.11 (default, Jul 1 2016, 02:08:48) [MSC v.1900 64 bit (AMD64)]</p></blockquote><ul><li>2022(py3)</li></ul><blockquote><p>3.7.7 (tags/v3.7.7:d7c567b08f, Mar 10 2020, 10:41:24) [MSC v.1900 64 bit (AMD64)]</p></blockquote><p><a href="https://help.autodesk.com/view/MAYAUL/2022/CHS/?guid=Maya_SDK_Open_Source_Components_3_2022_Open_Source_Components_html" target="_blank" rel="noreferrer">Maya 帮助 | Maya 2022.3 Open Source Components | Autodesk</a></p><h3 id="不同max版本的编译环境差异" tabindex="-1">不同MAx版本的编译环境差异 <a class="header-anchor" href="#不同max版本的编译环境差异" aria-label="Permalink to &quot;不同MAx版本的编译环境差异&quot;">​</a></h3><p>VC14.0(py2.7.15)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>+   3dsMax 2017 -py2.7.6</span></span>
<span class="line"><span>+   3dsMax 2018 -py2.7.12</span></span>
<span class="line"><span>+   3dsMax 2019 -py2.7.15</span></span>
<span class="line"><span>+   3dsMax 2020 -py2.7.15</span></span></code></pre></div><p>VC14.16</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>+   3dsMax 2021.3 - py3.7.6</span></span>
<span class="line"><span>+   3dsMax 2023 - py3.9.7</span></span></code></pre></div><p><a href="https://help.autodesk.com/view/MAXDEV/2023/ENU/?guid=sdk_requirements" target="_blank" rel="noreferrer">3dsMax各版本 VC</a></p><table tabindex="0"><thead><tr><th>MSVC++ version</th><th>_MSC_VER</th></tr></thead><tbody><tr><td>1.0</td><td>800</td></tr><tr><td>2.0</td><td>900</td></tr><tr><td>4.0</td><td>1000 (Developer Studio 4.0)</td></tr><tr><td>4.2</td><td>1020 (Developer Studio 4.2)</td></tr><tr><td>5.0</td><td>1100 (Visual Studio 5.0)</td></tr><tr><td>6.0</td><td>1200 (Visual Studio 6.0)</td></tr><tr><td>7.0</td><td>1300 (Visual Studio 2002 7.0)</td></tr><tr><td>7.1</td><td>1310 (Visual Studio 2003 7.1)</td></tr><tr><td>8.0</td><td>1400 (Visual Studio 2005 8.0)</td></tr><tr><td>9.0</td><td>1500 (Visual Studio 2008 9.0)</td></tr><tr><td>10.0</td><td>1600 (Visual Studio 2010 10.0)</td></tr><tr><td>11.0</td><td>1700 (Visual Studio 2012 11.0)</td></tr><tr><td>12.0</td><td>1800 (Visual Studio 2013 12.0)</td></tr><tr><td>14.0</td><td>1900 (Visual Studio 2015 14.0)</td></tr><tr><td>14.1</td><td>1910 (Visual Studio 2017 15.0)</td></tr><tr><td>14.11</td><td>1911 (Visual Studio 2017 15.3)</td></tr><tr><td>14.12</td><td>1912 (Visual Studio 2017 15.5)</td></tr><tr><td>14.13</td><td>1913 (Visual Studio 2017 version 15.6)</td></tr><tr><td>14.14</td><td>1914 (Visual Studio 2017 version 15.7)</td></tr><tr><td>14.15</td><td>1915 (Visual Studio 2017 version 15.8)</td></tr><tr><td>14.16</td><td>1916 (Visual Studio 2017 version 15.9)</td></tr><tr><td>14.20</td><td>1920 (Visual Studio 2019 Version 16.0)</td></tr><tr><td>14.21</td><td>1921 (Visual Studio 2019 Version 16.1)</td></tr><tr><td>14.22</td><td>1922 (Visual Studio 2019 Version 16.2)</td></tr><tr><td>14.23</td><td>1923 (Visual Studio 2019 Version 16.3)</td></tr><tr><td>14.24</td><td>1924 (Visual Studio 2019 Version 16.4)</td></tr><tr><td>14.25</td><td>1925 (Visual Studio 2019 Version 16.5)</td></tr><tr><td>14.26</td><td>1926 (Visual Studio 2019 Version 16.6)</td></tr><tr><td>14.27</td><td>1927 (Visual Studio 2019 Version 16.7)</td></tr><tr><td>14.28</td><td>1928 (Visual Studio 2019 Version 16.8 + 16.9)</td></tr><tr><td>14.29</td><td>1929 (Visual Studio 2019 Version 16.10 + 16.11)</td></tr><tr><td>14.30</td><td>1930 (Visual Studio 2022 Version 17.0)</td></tr><tr><td>14.31</td><td>1931 (Visual Studio 2022 Version 17.1)</td></tr><tr><td>14.32</td><td>1932 (Visual Studio 2022 Version 17.2)</td></tr></tbody></table><p>可以看到 从 2015 - 2021 单编译环境就有3种，但实际上因为，每个版本的 MAX 支持的 <code>PySide</code> 版本不一样，所以...... ,总之后如果你的工具想做多版本兼容，那就头大了。</p><p><strong>因为py向下兼容，py2的版本我直接用 py2.7.15 。</strong></p><p><a href="https://wiki.python.org/moin/WindowsCompilers" target="_blank" rel="noreferrer">WindowsCompilers - Python Wiki</a></p><p>Each Python version uses a specific compiler version (e.g. <em>CPython 2.7</em> uses <em>Visual C++ 9.0</em>, <em>CPython 3.3</em> uses <em>Visual C++ 10.0</em>, etc). So, you need to install the compiler version that corresponds to your Python version :</p><table tabindex="0"><thead><tr><th><strong>Visual C++</strong></th><th><strong>CPython</strong></th></tr></thead><tbody><tr><td>14.x</td><td>3.5 - 3.12+</td></tr><tr><td>10.0</td><td>3.3 - 3.4</td></tr><tr><td>9.0</td><td>2.6 - 2.7, 3.0 - 3.2</td></tr></tbody></table><h3 id="虚拟机环境" tabindex="-1">虚拟机环境 <a class="header-anchor" href="#虚拟机环境" aria-label="Permalink to &quot;虚拟机环境&quot;">​</a></h3><p>建议使用用虚拟机来搭建编译环境。我在虚拟机上安装好 VC14.0 和 py2.7.15 并设置好 msvc9compiler.py 之后就创建快照.</p><h3 id="python2-7-15" tabindex="-1">python2.7.15 <a class="header-anchor" href="#python2-7-15" aria-label="Permalink to &quot;python2.7.15&quot;">​</a></h3><p>1 安装python 和 VC编译器</p><p>直接在虚拟机中安装对应版本 python 和 VC编译器</p><p>安装 pip cython easycython</p><ul><li>pip install cython</li><li>pip install easycython</li></ul><p>安装vc9.0 (VCForPython27.msi ) 或是 vc14.0 ( Microsoft Visual C++ Build Tools 2015 ) 两者不冲突</p><p>链接：<a href="https://pan.baidu.com/s/1GITx2pw0ev9GL4_l7Wb52g" target="_blank" rel="noreferrer">https://pan.baidu.com/s/1GITx2pw0ev9GL4_l7Wb52g</a> 提取码：6y5f</p><p>这里提供了 vc 安装安装包，下载之后直接安装即可</p><p>2 编辑 msvc9compiler.py - VC9.0</p><p>vc9.0 安装路径</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>C:\\Users\\Administrator\\AppData\\Local\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0</span></span></code></pre></div><p>参考文章</p><p><a href="https://www.cnblogs.com/lazyboy/p/4017567.html" target="_blank" rel="noreferrer">windows平台使用Microsoft Visual C++ Compiler for Python 2.7编译python扩展</a></p><p>修改 <code>python</code> 安装目录下 <code>Lib\\distutils\\msvc9compiler.py</code> 文件 , 如有必要可能 <code>msvccompiler.py</code> 文件也需要做相应更改，找到 <code>get_build_version</code> 方法直接 <code>return 9.0</code></p><p><img src="https://anki.wpshe.vip/qiniu/202409181443456.png" alt="img"></p><p><img src="https://anki.wpshe.vip/qiniu/202409181443917.png" alt="img"></p><p>编辑 msvc9compiler.py - VC14.0</p><p><img src="https://anki.wpshe.vip/qiniu/202409181444923.png" alt="img"></p><p><img src="https://anki.wpshe.vip/qiniu/202409181444456.png" alt="img"></p><p>为不同MAX版本 编译 pyd 请自行修改好返回 <code>vc9</code> 还是 <code>vc14.0</code></p><h2 id="使用脚本编译-pyd" tabindex="-1">使用脚本编译 pyd <a class="header-anchor" href="#使用脚本编译-pyd" aria-label="Permalink to &quot;使用脚本编译 pyd&quot;">​</a></h2><p>新建 <code>cython_pyfile.py</code> ，内容如下，注意图中的 <code>you_python_file_name</code> 替换成你自己要编译的 <code>py文件名</code></p><p><img src="https://anki.wpshe.vip/qiniu/202409181444301.png" alt="img"></p><p>将此脚本和你的 .py 文件放在一目录下，</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python cython_pyfile.py build_ext --inplace</span></span></code></pre></div><p>然后运行以上语句即可编译</p><h3 id="python3-7" tabindex="-1">python3.7 <a class="header-anchor" href="#python3-7" aria-label="Permalink to &quot;python3.7&quot;">​</a></h3><p>和py2.7一样，还是先安装 python3.7,然后安装 cython ，easycython。</p><p>实际上安装了 Microsoft Visual C++ Build Tools 2015 之后会自动添加系统环境变量中的，py3.7编译的话，distutils 模块会自动搜索到 vc14.0 的设置，而无需去修改 msvc9compiler.py 。</p><p>直接编译即可。</p><p>注意</p><p>py3.7 编译出的 pyd 文件会有 .cp37-win_amd64.pyd 这样后缀文件命名,不需要修改，引用直接原名。</p><h2 id="测试模块" tabindex="-1">测试模块 <a class="header-anchor" href="#测试模块" aria-label="Permalink to &quot;测试模块&quot;">​</a></h2><h3 id="测试代码" tabindex="-1">测试代码 <a class="header-anchor" href="#测试代码" aria-label="Permalink to &quot;测试代码&quot;">​</a></h3><p><img src="https://anki.wpshe.vip/qiniu/202409181445538.png" alt="img"></p><h3 id="编译py文件" tabindex="-1">编译py文件 <a class="header-anchor" href="#编译py文件" aria-label="Permalink to &quot;编译py文件&quot;">​</a></h3><p><img src="https://anki.wpshe.vip/qiniu/202409181446103.png" alt=""></p><h3 id="引用测试" tabindex="-1">引用测试 <a class="header-anchor" href="#引用测试" aria-label="Permalink to &quot;引用测试&quot;">​</a></h3><p><img src="https://anki.wpshe.vip/qiniu/202409181446094.png" alt="img"></p>`,59)]))}const y=a(s,[["render",p]]);export{u as __pageData,y as default};
