import{_ as i,c as a,a3 as t,o as n}from"./chunks/framework.DgyBiAMx.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"skin/website/uiautomation.md","filePath":"skin/website/uiautomation.md","lastUpdated":1733458247000}'),e={name:"skin/website/uiautomation.md"};function l(h,s,p,k,o,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h3 id="打开某个程序" tabindex="-1">打开某个程序 <a class="header-anchor" href="#打开某个程序" aria-label="Permalink to &quot;打开某个程序&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subprocess</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打开系统自带的某个程序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">subprocess.Popen(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;notepad.exe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打开其他程序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">subprocess.Popen(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TestSoftware</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">XXXX.exe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)		</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可执行文件的具体地址信息</span></span></code></pre></div><h3 id="不同类型元素的操作" tabindex="-1">不同类型元素的操作 <a class="header-anchor" href="#不同类型元素的操作" aria-label="Permalink to &quot;不同类型元素的操作&quot;">​</a></h3><ul><li><p>程序窗口:WindowControl()</p></li><li><p>按钮：ButtonControl()</p></li><li><p>文件显示：TextControl()</p></li><li><p>输入框：EditControl()</p></li></ul><h3 id="元素的属性" tabindex="-1">元素的属性 <a class="header-anchor" href="#元素的属性" aria-label="Permalink to &quot;元素的属性&quot;">​</a></h3><p><code>ClassName、Name、ProcessId、AutomationId</code></p><h3 id="常用的操作" tabindex="-1">常用的操作 <a class="header-anchor" href="#常用的操作" aria-label="Permalink to &quot;常用的操作&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DoubleClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() 双击</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() 点击；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RighClik</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() 右键点击；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SendKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() 发送字符；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() 传值，一般对EditControl用；</span></span></code></pre></div><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><h4 id="抓取软件主界面" tabindex="-1">抓取软件主界面 <a class="header-anchor" href="#抓取软件主界面" aria-label="Permalink to &quot;抓取软件主界面&quot;">​</a></h4><blockquote><p>windows软件，一般都会有一个主界面，这个主界面一般都不会改变的，我们需要在主界面下对其他对话框或元素等的操作。</p></blockquote><p><img src="http://bed.wpshe.vip/202409191758665.png" alt="在这里插入图片描述"></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uiautomation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto.WindowControl(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ClassName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#32770&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">searchDepth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 窗口捕获</span></span></code></pre></div><h4 id="获取子窗口信息" tabindex="-1">获取子窗口信息 <a class="header-anchor" href="#获取子窗口信息" aria-label="Permalink to &quot;获取子窗口信息&quot;">​</a></h4><p><strong>获取弹框的提示内容(因为每次的弹框导出的内容不一样)</strong></p><p><img src="http://bed.wpshe.vip/202409191759582.png" alt="在这里插入图片描述"></p><p><img src="http://bed.wpshe.vip/202409191759443.png" alt="在这里插入图片描述"></p><ul><li><p>通过UIspy界面，找到对应的这个弹框的详细信息</p></li><li><p>发现弹框的提示信息，是Text类型的，所以只要获取这个元素的对象，就能找到Name属性的值了</p></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text_element </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.TextControl(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">AutomationId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;65535&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#获取弹框元素，window是我们上一步获取的主界面对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alert_info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> text_element.Name</span></span></code></pre></div>`,19)]))}const c=i(e,[["render",l]]);export{E as __pageData,c as default};
